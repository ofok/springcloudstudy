server:
  port: 8010
spring:
  application:
    name: user-server
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        namespace: 2a57e550-6295-4269-b1b4-268c46021020
    # 不适用ribbon
    loadbalancer:
      ribbon:
        enabled: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/sharekit?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: root
      password: hczxzb
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

#mybatis-plus
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.jiuge.user.*.entity
  global-config:
    #数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增"
      id-type: AUTO
      logic-delete-value: -1
      logic-not-delete-value: 0
      banner: false
    #原生配置
    configuration:
      map-underscore-to-camel-case: true
      cache-enabled: false
      call-setters-on-nulls: true
      jdbc-type-for-null: 'null'

order-server:
  ribbon:
    # 指定使用Nacos提供的负载均衡策略（优先调用同一集群的实例，基于随机&权重）
    # NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule
    NFLoadBalancerRuleClassName: com.jiuge.user.rule.NacosRandomWithWeightRule
ribbon:
  eager-load:
    # 配置order-server使用ribbon饥饿加载，多个使用逗号分隔
    clients: order-server
    # 开启ribbon饥饿加载
    enabled: true
logging:
  level:
    com.jiuge.user.feign: debug
#feign:
#  client:
#    config:
#      order-server:
#        loggerLevel: FULL
#        # 连接超时时间，默认2s
#        connectTimeout: 2000
#        # 请求处理超时时间，默认5s
#        readTimeout: 3000
#feign:
#  #feign 使用 Apache HttpClient  可以忽略，默认开启
#  httpclient:
#feign:
#  #feign 使用 okhttp
#  okhttp:
#    enabled: true
##    enabled: true
feign:
  httpclient:
    enabled: true
  compression:
    request:
      enabled: true
      # 配置压缩的类型
      mime-types: text/xml,application/xml,application/json
      #最小压缩值
      min-request-size: 2048
    response:
      enabled: true
